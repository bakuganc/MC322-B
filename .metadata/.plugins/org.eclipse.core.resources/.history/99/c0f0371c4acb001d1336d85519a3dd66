import java.util.Scanner;

public class Main {
	
	Scanner scanner = new Scanner(System.in);
	
	System.out.print("Digite o nome do cliente: ");
    String nomeCliente = scanner.nextLine();
    cliente.setNome(nomeCliente);

    System.out.print("Digite o CPF do cliente: ");
    String cpfCliente = scanner.nextLine();
    cliente.setCpf(cpfCliente);

    System.out.print("Digite o nome da seguradora: ");
    String nomeSeguradora = scanner.nextLine();
    seguradora.setNome(nomeSeguradora)

    System.out.print("Digite a descrição do sinistro: ");
    String descricaoSinistro = scanner.nextLine();
    sinistro.setDescricao(descricaoSinistro);

    System.out.print("Digite o modelo do veículo: ");
    String modeloVeiculo = scanner.nextLine();
    veiculo.setModelo(modeloVeiculo);

    System.out.print("Digite o ano do veículo: ");
    int anoVeiculo = scanner.nextInt();
    veiculo.@setAno(anoVeiculo);
    
    public static boolean validarCPF(String cpf) {
        if (cpf == null || cpf.length() != 11) {
            return false;
        }

        // Remove os caracteres de formatação (pontos e hífen)
        cpf = cpf.replaceAll("[.-]", "");

        // Verifica se o CPF é composto apenas de números
        if (!cpf.matches("\\d+")) {
            return false;
        }

        // Verifica se os dígitos verificadores são válidos
        int[] digitos = new int[11];
        for (int i = 0; i < 11; i++) {
            digitos[i] = Integer.parseInt(cpf.substring(i, i + 1));
        }
        int soma = 0;
        for (int i = 0; i < 9; i++) {
            soma += digitos[i] * (10 - i);
        }
        int resto = 11 - soma % 11;
        if (resto == 10 || resto == 11) {
            resto = 0;
        }
        if (resto != digitos[9]) {
            return false;
        }
        soma = 0;
        for (int i = 0; i < 10; i++) {
            soma += digitos[i] * (11 - i);
        }
        resto = 11 - soma % 11;
        if (resto == 10 || resto == 11) {
            resto = 0;
        }
        if (resto != digitos[10]) {
            return false;
        }

        return true;
    }
    
    
    
    
	
}
